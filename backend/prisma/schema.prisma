generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  createdAt   DateTime     @default(now())
  wallets     Wallet[]
  orders      Order[]
  referral    Referral?
  commissions Commission[]
  redemptions Redemption[]
}

model Wallet {
  id      String  @id @default(cuid())
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  chainId Int
  address String  @unique
  type    String
  kyc     String?
}

model Product {
  id            String         @id @default(cuid())
  title         String
  sku           String         @unique
  priceFiat     Decimal        @db.Decimal(14, 2)
  priceToken    Decimal        @db.Decimal(32, 8)
  rwaType       String
  chainId       Int
  contract      String
  tokenType     String
  redeemPolicy  Json
  status        String
  inventoryLots InventoryLot[]
  orders        Order[]
  redemptions   Redemption[]
}

model InventoryLot {
  id           String    @id @default(cuid())
  product      Product   @relation(fields: [productId], references: [id])
  productId    String
  lotNo        String
  qtyTotal     Int
  qtyAvailable Int
  warehouseId  String
  custodyHash  String
  insurer      String?
  expiryAt     DateTime?
}

model Order {
  id           String       @id @default(cuid())
  user         User         @relation(fields: [userId], references: [id])
  userId       String
  product      Product      @relation(fields: [productId], references: [id])
  productId    String
  qty          Int
  amountFiat   Decimal      @db.Decimal(14, 2)
  amountCrypto Decimal      @db.Decimal(32, 8)
  status       String
  payRef       String?
  createdAt    DateTime     @default(now())
  commissions  Commission[]
}

model Referral {
  id     String  @id @default(cuid())
  user   User    @relation(fields: [userId], references: [id])
  userId String  @unique
  l1     String?
  l2     String?
  l3     String?
  active Boolean @default(true)
}

model Commission {
  id             String    @id @default(cuid())
  order          Order     @relation(fields: [orderId], references: [id])
  orderId        String
  beneficiary    User      @relation(fields: [beneficiaryId], references: [id])
  beneficiaryId  String
  level          Int
  baseAmount     Decimal   @db.Decimal(14, 2)
  rate           Decimal   @db.Decimal(5, 4)
  payoutCurrency String
  vestingAt      DateTime?
  txid           String?
  status         String
}

model Redemption {
  id                String   @id @default(cuid())
  user              User     @relation(fields: [userId], references: [id])
  userId            String
  product           Product  @relation(fields: [productId], references: [id])
  productId         String
  qty               Int
  burnTxid          String?
  kycCheck          String?
  shippingAddressId String?
  shippingStatus    String?
  createdAt         DateTime @default(now())
}

model AuditLog {
  id         String   @id @default(cuid())
  objectType String
  objectId   String
  action     String
  actor      String?
  before     Json?
  after      Json?
  createdAt  DateTime @default(now())
}
